<<<<<<< HEAD
{"version":3,"sources":["../../src/addon/mod/assign/pages/edit/edit.module.ts","../../src/addon/mod/assign/pages/edit/edit.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AAAA,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;AAEQ;AACO;AACM;AACe;AACA;AACe;AACpC;AAchD;IAAA;IAA2C,CAAC;IAA/B,4BAA4B;QAZxC,uEAAQ,CAAC;YACN,YAAY,EAAE;gBACV,qEAAsB;aACzB;YACD,OAAO,EAAE;gBACL,2FAAoB;gBACpB,2FAAoB;gBACpB,qGAA8B;gBAC9B,sEAAe,CAAC,QAAQ,CAAC,qEAAsB,CAAC;gBAChD,4EAAe,CAAC,QAAQ,EAAE;aAC7B;SACJ,CAAC;OACW,4BAA4B,CAAG;IAAD,mCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;AClCzC;AAAA,sCAAsC;AACtC,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,iDAAiD;AACjD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;;;;;;;;;;AAE4B;AACJ;AACF;AACA;AACF;AACF;AACS;AACyB;AACrB;AACe;AACN;AACH;AAEtE;;GAEG;AAMH;IAmBI,gCAAY,SAAoB,EAAY,OAAsB,EAAY,aAAgC,EAC5F,YAA8B,EAAY,QAA8B,EACxE,SAA2B,EAAY,kBAAkD,EACzF,cAAkC,EAAY,cAAsC,EACpF,qBAAoD,EAAY,YAA0C,EAC1G,kBAA8C;QALpB,YAAO,GAAP,OAAO,CAAe;QAAY,kBAAa,GAAb,aAAa,CAAmB;QAC5F,iBAAY,GAAZ,YAAY,CAAkB;QAAY,aAAQ,GAAR,QAAQ,CAAsB;QACxE,cAAS,GAAT,SAAS,CAAkB;QAAY,uBAAkB,GAAlB,kBAAkB,CAAgC;QACzF,mBAAc,GAAd,cAAc,CAAoB;QAAY,mBAAc,GAAd,cAAc,CAAwB;QACpF,0BAAqB,GAArB,qBAAqB,CAA+B;QAAY,iBAAY,GAAZ,YAAY,CAA8B;QAC1G,uBAAkB,GAAlB,kBAAkB,CAA4B;QAVtD,gBAAW,GAAG,KAAK,CAAC,CAAC,mCAAmC;QACxD,eAAU,GAAG,KAAK,CAAC,CAAC,2CAA2C;QAC/D,gBAAW,GAAG,KAAK,CAAC,CAAC,4CAA4C;QACjE,eAAU,GAAG,KAAK,CAAC,CAAC,0DAA0D;QASpF,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,GAAG,aAAa,CAAC,oBAAoB,EAAE,CAAC,CAAC,yDAAyD;QAC7G,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAE1C,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;QACrE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAED;;OAEG;IACH,yCAAQ,GAAR;QAAA,iBAIC;QAHG,IAAI,CAAC,eAAe,EAAE,CAAC,OAAO,CAAC;YAC3B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACH,gDAAe,GAAf;QAAA,iBAcC;QAbG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YAClB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,6BAA6B;QAC7B,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO;YACtC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACV,MAAM,CAAC,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;YACvF,CAAC;QACL,CAAC,CAAC,CAAC,IAAI,CAAC;YACJ,qFAAqF;YACrF,KAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,cAAc,EAAE,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC;QAC1G,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACO,gDAAe,GAAzB;QAAA,iBAiEC;QAhEG,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE,CAAC;QAEhE,uBAAuB;QACvB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YAC/E,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,IAAI,KAAI,CAAC,KAAK,CAAC;YAEvC,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACpB,wBAAwB;gBACxB,KAAI,CAAC,YAAY,CAAC,cAAc,CAAC,iFAAsB,CAAC,SAAS,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;YAClF,CAAC;YAED,qCAAqC;YACrC,MAAM,CAAC,KAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC,IAAI,CAAC;YAEJ,8DAA8D;YAC9D,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,UAAC,GAAG;gBAC7G,mCAAmC;gBACnC,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,KAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;oBACpG,IAAM,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,8BAA8B,CAAC,KAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;oBAE7G,4CAA4C;oBAC5C,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,KAAI,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC,IAAI,CAAC,UAAC,cAAc;wBAC/F,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;4BACjB,MAAM,CAAC,QAAQ,CAAC;wBACpB,CAAC;wBAED,kDAAkD;wBAClD,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;wBAE1B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC/B,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;gBACb,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;oBAChC,sBAAsB;oBACtB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAC,EAAE,EAAE,KAAI,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC;gBAC7F,CAAC;gBAED,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,CAAC,8BAA8B,CAAC,KAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC,CAAC;gBAC5G,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,iEAAiE;gBAE3F,uEAAuE;gBACvE,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,0BAA0B,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,gBAAgB,IAAI,KAAI,CAAC,MAAM,IAAI,aAAa,CAAC,CAAC,CAAC;oBAC1G,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC;gBAC/D,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;gBACzC,CAAC;gBAED,yDAAyD;gBACzD,MAAM,CAAC,KAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;oBACnF,KAAI,CAAC,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;gBACzF,CAAC,CAAC,CAAC,KAAK,CAAC;oBACL,yBAAyB;oBACzB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;YACX,KAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,EAAE,+BAA+B,CAAC,CAAC;YAE5E,oBAAoB;YACpB,KAAI,CAAC,iBAAiB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACO,6CAAY,GAAtB;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC;IACvF,CAAC;IAED;;;;OAIG;IACO,+CAAc,GAAxB;QAAA,iBAqBC;QApBG,yHAAyH;QACzH,8DAA8D;QAC9D,IAAI,KAAK,EACL,SAAS,GAAG,IAAI,CAAC;QAErB,UAAU,CAAC;YACP,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACZ,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;YAC7C,CAAC;QACL,CAAC,EAAE,GAAG,CAAC,CAAC;QAER,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEjC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC;YAC/F,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACP,KAAK,CAAC,OAAO,EAAE,CAAC;YACpB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,SAAS,GAAG,KAAK,CAAC;YACtB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACO,kDAAiB,GAA3B;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACO,sDAAqB,GAA/B,UAAgC,SAAc;QAA9C,iBAgBC;QAfG,sDAAsD;QACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC;QAEnC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC;aACzG,KAAK,CAAC,UAAC,KAAK;YAEjB,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACzC,sDAAsD;gBACtD,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,cAAc,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;YAC5G,CAAC;YAED,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,qCAAI,GAAJ;QAAA,iBAcC;QAbG,6BAA6B;QAC7B,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAC,OAAO;YAC/B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACV,KAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC;oBACvB,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7B,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACX,KAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;gBAC3E,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,iCAAiC;gBACjC,KAAI,CAAC,iBAAiB,EAAE,CAAC;YAC7B,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;;;OAIG;IACO,+CAAc,GAAxB;QAAA,iBA4DC;QA3DG,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAEtC,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,IAAI,CAAC,CAAC,SAAS,CAAC,mBAAmB,IAAI,SAAS,CAAC,mBAAmB,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC;YAC5G,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,4CAA4C,CAAC,CAAC,CAAC;QAChG,CAAC;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;QAE7C,oCAAoC;QACpC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,KAAK,CAAC;YACjG,qCAAqC;YACrC,MAAM,CAAC,CAAC,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YACT,KAAK,CAAC,OAAO,EAAE,CAAC;YAEhB,kBAAkB;YAClB,MAAM,CAAC,KAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;QACpF,CAAC,CAAC,CAAC,IAAI,CAAC;YACJ,KAAK,GAAG,KAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAE7D,MAAM,CAAC,KAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,UAAU;gBACzD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBAClC,mBAAmB;oBACnB,MAAM,CAAC;gBACX,CAAC;gBAED,IAAI,OAAO,CAAC;gBAEZ,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBACnB,8BAA8B;oBAC9B,OAAO,GAAG,KAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAI,CAAC,QAAQ,EAAE,UAAU,EACrF,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,KAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;gBAC1F,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,4BAA4B;oBAC5B,OAAO,GAAG,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,KAAI,CAAC,YAAY,EACjG,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,KAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,KAAI,CAAC,MAAM,CAAC,CAAC;gBACzF,CAAC;gBAED,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;oBAChB,mCAAmC;oBACnC,IAAM,MAAM,GAAG;wBACX,YAAY,EAAE,KAAI,CAAC,MAAM,CAAC,EAAE;wBAC5B,YAAY,EAAE,KAAI,CAAC,cAAc,CAAC,EAAE;wBACpC,MAAM,EAAE,KAAI,CAAC,MAAM;qBACtB,CAAC;oBAEF,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,iFAAsB,CAAC,sBAAsB,EAAE,MAAM,EACzE,KAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC;oBAE/C,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBAChC,yDAAyD;wBACzD,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,iFAAsB,CAAC,2BAA2B,EAAE,MAAM,EAC9E,KAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC;oBACnD,CAAC;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,OAAO,CAAC;YACP,KAAK,CAAC,OAAO,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,4CAAW,GAAX;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,0BAA0B;QAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,iFAAsB,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACzF,CAAC;IACL,CAAC;IA9SQ,sBAAsB;QAJlC,wEAAS,CAAC;YACP,QAAQ,EAAE,4BAA4B;WACd;SAC3B,CAAC;yKAoBkC,CAA8E;YAC9E,6EAAgB,EAAsB,2GAAoB;YAC7D,6EAAgD,oFAA8B;YACzE,gGAA8C,0FAAsB;YAC7D,6FAAmF;YACtF,mBAA0B;OAxBvD,sBAAsB,CA+SlC;IAAD,CAAC;AAAA;SA/SY,sBAAsB,C","file":"101.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { AddonModAssignComponentsModule } from '../../components/components.module';\r\nimport { AddonModAssignEditPage } from './edit';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonModAssignEditPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        AddonModAssignComponentsModule,\r\n        IonicPageModule.forChild(AddonModAssignEditPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n})\r\nexport class AddonModAssignEditPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/edit/edit.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreSyncProvider } from '@providers/sync';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreFileUploaderHelperProvider } from '@core/fileuploader/providers/helper';\r\nimport { AddonModAssignProvider } from '../../providers/assign';\r\nimport { AddonModAssignOfflineProvider } from '../../providers/assign-offline';\r\nimport { AddonModAssignSyncProvider } from '../../providers/assign-sync';\r\nimport { AddonModAssignHelperProvider } from '../../providers/helper';\r\n\r\n/**\r\n * Page that allows adding or editing an assigment submission.\r\n */\r\n@IonicPage({ segment: 'addon-mod-assign-edit' })\r\n@Component({\r\n    selector: 'page-addon-mod-assign-edit',\r\n    templateUrl: 'edit.html',\r\n})\r\nexport class AddonModAssignEditPage implements OnInit, OnDestroy {\r\n    title: string; // Title to display.\r\n    assign: any; // Assignment.\r\n    courseId: number; // Course ID the assignment belongs to.\r\n    userSubmission: any; // The user submission.\r\n    allowOffline: boolean; // Whether offline is allowed.\r\n    submissionStatement: string; // The submission statement.\r\n    submissionStatementAccepted: boolean; // Whether submission statement is accepted.\r\n    loaded: boolean; // Whether data has been loaded.\r\n\r\n    protected moduleId: number; // Module ID the submission belongs to.\r\n    protected userId: number; // User doing the submission.\r\n    protected isBlind: boolean; // Whether blind is used.\r\n    protected editText: string; // \"Edit submission\" translated text.\r\n    protected saveOffline = false; // Whether to save data in offline.\r\n    protected hasOffline = false; // Whether the assignment has offline data.\r\n    protected isDestroyed = false; // Whether the component has been destroyed.\r\n    protected forceLeave = false; // To allow leaving the page without checking for changes.\r\n\r\n    constructor(navParams: NavParams, protected navCtrl: NavController, protected sitesProvider: CoreSitesProvider,\r\n            protected syncProvider: CoreSyncProvider, protected domUtils: CoreDomUtilsProvider,\r\n            protected translate: TranslateService, protected fileUploaderHelper: CoreFileUploaderHelperProvider,\r\n            protected eventsProvider: CoreEventsProvider, protected assignProvider: AddonModAssignProvider,\r\n            protected assignOfflineProvider: AddonModAssignOfflineProvider, protected assignHelper: AddonModAssignHelperProvider,\r\n            protected assignSyncProvider: AddonModAssignSyncProvider) {\r\n\r\n        this.moduleId = navParams.get('moduleId');\r\n        this.courseId = navParams.get('courseId');\r\n        this.userId = sitesProvider.getCurrentSiteUserId(); // Right now we can only edit current user's submissions.\r\n        this.isBlind = !!navParams.get('blindId');\r\n\r\n        this.editText = translate.instant('addon.mod_assign.editsubmission');\r\n        this.title = this.editText;\r\n    }\r\n\r\n    /**\r\n     * Component being initialized.\r\n     */\r\n    ngOnInit(): void {\r\n        this.fetchAssignment().finally(() => {\r\n            this.loaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check if we can leave the page or not.\r\n     *\r\n     * @return {boolean|Promise<void>} Resolved if we can leave it, rejected if not.\r\n     */\r\n    ionViewCanLeave(): boolean | Promise<void> {\r\n        if (this.forceLeave) {\r\n            return true;\r\n        }\r\n\r\n        // Check if data has changed.\r\n        return this.hasDataChanged().then((changed) => {\r\n            if (changed) {\r\n                return this.domUtils.showConfirm(this.translate.instant('core.confirmcanceledit'));\r\n            }\r\n        }).then(() => {\r\n            // Nothing has changed or user confirmed to leave. Clear temporary data from plugins.\r\n            this.assignHelper.clearSubmissionPluginTmpData(this.assign, this.userSubmission, this.getInputData());\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch assignment data.\r\n     *\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    protected fetchAssignment(): Promise<any> {\r\n        const currentUserId = this.sitesProvider.getCurrentSiteUserId();\r\n\r\n        // Get assignment data.\r\n        return this.assignProvider.getAssignment(this.courseId, this.moduleId).then((assign) => {\r\n            this.assign = assign;\r\n            this.title = assign.name || this.title;\r\n\r\n            if (!this.isDestroyed) {\r\n                // Block the assignment.\r\n                this.syncProvider.blockOperation(AddonModAssignProvider.COMPONENT, assign.id);\r\n            }\r\n\r\n            // Wait for sync to be over (if any).\r\n            return this.assignSyncProvider.waitForSync(assign.id);\r\n        }).then(() => {\r\n\r\n            // Get submission status. Ignore cache to get the latest data.\r\n            return this.assignProvider.getSubmissionStatus(this.assign.id, this.userId, this.isBlind, false, true).catch((err) => {\r\n                // Cannot connect. Get cached data.\r\n                return this.assignProvider.getSubmissionStatus(this.assign.id, this.userId, this.isBlind).then((response) => {\r\n                    const userSubmission = this.assignProvider.getSubmissionObjectFromAttempt(this.assign, response.lastattempt);\r\n\r\n                    // Check if the user can edit it in offline.\r\n                    return this.assignHelper.canEditSubmissionOffline(this.assign, userSubmission).then((canEditOffline) => {\r\n                        if (canEditOffline) {\r\n                            return response;\r\n                        }\r\n\r\n                        // Submission cannot be edited in offline, reject.\r\n                        this.allowOffline = false;\r\n\r\n                        return Promise.reject(err);\r\n                    });\r\n                });\r\n            }).then((response) => {\r\n                if (!response.lastattempt.canedit) {\r\n                    // Can't edit. Reject.\r\n                    return Promise.reject(this.translate.instant('core.nopermissions', {$a: this.editText}));\r\n                }\r\n\r\n                this.userSubmission = this.assignProvider.getSubmissionObjectFromAttempt(this.assign, response.lastattempt);\r\n                this.allowOffline = true; // If offline isn't allowed we shouldn't have reached this point.\r\n\r\n                // Only show submission statement if we are editing our own submission.\r\n                if (this.assign.requiresubmissionstatement && !this.assign.submissiondrafts && this.userId == currentUserId) {\r\n                    this.submissionStatement = this.assign.submissionstatement;\r\n                } else {\r\n                    this.submissionStatement = undefined;\r\n                }\r\n\r\n                // Check if there's any offline data for this submission.\r\n                return this.assignOfflineProvider.getSubmission(this.assign.id, this.userId).then((data) => {\r\n                    this.hasOffline = data && data.plugindata && Object.keys(data.plugindata).length > 0;\r\n                }).catch(() => {\r\n                    // No offline data found.\r\n                    this.hasOffline = false;\r\n                });\r\n            });\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'Error getting assigment data.');\r\n\r\n            // Leave the player.\r\n            this.leaveWithoutCheck();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the input data.\r\n     *\r\n     * @return {any} Input data.\r\n     */\r\n    protected getInputData(): any {\r\n        return this.domUtils.getDataFromForm(document.forms['addon-mod_assign-edit-form']);\r\n    }\r\n\r\n    /**\r\n     * Check if data has changed.\r\n     *\r\n     * @return {Promise<boolean>} Promise resolved with boolean: whether data has changed.\r\n     */\r\n    protected hasDataChanged(): Promise<boolean> {\r\n        // Usually the hasSubmissionDataChanged call will be resolved inmediately, causing the modal to be shown just an instant.\r\n        // We'll wait a bit before showing it to prevent this \"blink\".\r\n        let modal,\r\n            showModal = true;\r\n\r\n        setTimeout(() => {\r\n            if (showModal) {\r\n                modal = this.domUtils.showModalLoading();\r\n            }\r\n        }, 100);\r\n\r\n        const data = this.getInputData();\r\n\r\n        return this.assignHelper.hasSubmissionDataChanged(this.assign, this.userSubmission, data).finally(() => {\r\n           if (modal) {\r\n                modal.dismiss();\r\n            } else {\r\n                showModal = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Leave the view without checking for changes.\r\n     */\r\n    protected leaveWithoutCheck(): void {\r\n        this.forceLeave = true;\r\n        this.navCtrl.pop();\r\n    }\r\n\r\n    /**\r\n     * Get data to submit based on the input data.\r\n     *\r\n     * @param {any} inputData The input data.\r\n     * @return {Promise<any>} Promise resolved with the data to submit.\r\n     */\r\n    protected prepareSubmissionData(inputData: any): Promise<any> {\r\n        // If there's offline data, always save it in offline.\r\n        this.saveOffline = this.hasOffline;\r\n\r\n        return this.assignHelper.prepareSubmissionPluginData(this.assign, this.userSubmission, inputData, this.hasOffline)\r\n                .catch((error) => {\r\n\r\n            if (this.allowOffline && !this.saveOffline) {\r\n                // Cannot submit in online, prepare for offline usage.\r\n                this.saveOffline = true;\r\n\r\n                return this.assignHelper.prepareSubmissionPluginData(this.assign, this.userSubmission, inputData, true);\r\n            }\r\n\r\n            return Promise.reject(error);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save the submission.\r\n     */\r\n    save(): void {\r\n        // Check if data has changed.\r\n        this.hasDataChanged().then((changed) => {\r\n            if (changed) {\r\n                this.saveSubmission().then(() => {\r\n                    this.leaveWithoutCheck();\r\n                }).catch((error) => {\r\n                    this.domUtils.showErrorModalDefault(error, 'Error saving submission.');\r\n                });\r\n            } else {\r\n                // Nothing to save, just go back.\r\n                this.leaveWithoutCheck();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Save the submission.\r\n     *\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    protected saveSubmission(): Promise<any> {\r\n        const inputData = this.getInputData();\r\n\r\n        if (this.submissionStatement && (!inputData.submissionstatement || inputData.submissionstatement === 'false')) {\r\n            return Promise.reject(this.translate.instant('addon.mod_assign.acceptsubmissionstatement'));\r\n        }\r\n\r\n        let modal = this.domUtils.showModalLoading();\r\n\r\n        // Get size to ask for confirmation.\r\n        return this.assignHelper.getSubmissionSizeForEdit(this.assign, this.userSubmission, inputData).catch(() => {\r\n            // Error calculating size, return -1.\r\n            return -1;\r\n        }).then((size) => {\r\n            modal.dismiss();\r\n\r\n            // Confirm action.\r\n            return this.fileUploaderHelper.confirmUploadFile(size, true, this.allowOffline);\r\n        }).then(() => {\r\n            modal = this.domUtils.showModalLoading('core.sending', true);\r\n\r\n            return this.prepareSubmissionData(inputData).then((pluginData) => {\r\n                if (!Object.keys(pluginData).length) {\r\n                    // Nothing to save.\r\n                    return;\r\n                }\r\n\r\n                let promise;\r\n\r\n                if (this.saveOffline) {\r\n                    // Save submission in offline.\r\n                    promise = this.assignOfflineProvider.saveSubmission(this.assign.id, this.courseId, pluginData,\r\n                            this.userSubmission.timemodified, !this.assign.submissiondrafts, this.userId);\r\n                } else {\r\n                    // Try to send it to server.\r\n                    promise = this.assignProvider.saveSubmission(this.assign.id, this.courseId, pluginData, this.allowOffline,\r\n                            this.userSubmission.timemodified, this.assign.submissiondrafts, this.userId);\r\n                }\r\n\r\n                return promise.then(() => {\r\n                    // Submission saved, trigger event.\r\n                    const params = {\r\n                        assignmentId: this.assign.id,\r\n                        submissionId: this.userSubmission.id,\r\n                        userId: this.userId,\r\n                    };\r\n\r\n                    this.eventsProvider.trigger(AddonModAssignProvider.SUBMISSION_SAVED_EVENT, params,\r\n                            this.sitesProvider.getCurrentSiteId());\r\n\r\n                    if (!this.assign.submissiondrafts) {\r\n                        // No drafts allowed, so it was submitted. Trigger event.\r\n                        this.eventsProvider.trigger(AddonModAssignProvider.SUBMITTED_FOR_GRADING_EVENT, params,\r\n                                this.sitesProvider.getCurrentSiteId());\r\n                    }\r\n                });\r\n            });\r\n        }).finally(() => {\r\n            modal.dismiss();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Component being destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.isDestroyed = true;\r\n\r\n        // Unblock the assignment.\r\n        if (this.assign) {\r\n            this.syncProvider.unblockOperation(AddonModAssignProvider.COMPONENT, this.assign.id);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/edit/edit.ts"],"sourceRoot":""}
=======
{"version":3,"sources":["../../src/addon/mod/assign/pages/submission-list/submission-list.module.ts","../../src/addon/mod/assign/pages/submission-list/submission-list.ts"],"names":[],"mappings":"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","file":"101.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonModAssignSubmissionListPage } from './submission-list';\n\n@NgModule({\n    declarations: [\n        AddonModAssignSubmissionListPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        IonicPageModule.forChild(AddonModAssignSubmissionListPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModAssignSubmissionListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/submission-list/submission-list.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { AddonModAssignProvider } from '../../providers/assign';\nimport { AddonModAssignOfflineProvider } from '../../providers/assign-offline';\nimport { AddonModAssignHelperProvider } from '../../providers/helper';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\n\n/**\n * Page that displays a list of submissions of an assignment.\n */\n@IonicPage({ segment: 'addon-mod-assign-submission-list' })\n@Component({\n    selector: 'page-addon-mod-assign-submission-list',\n    templateUrl: 'submission-list.html',\n})\nexport class AddonModAssignSubmissionListPage implements OnInit, OnDestroy {\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\n\n    title: string; // Title to display.\n    assign: any; // Assignment.\n    submissions: any[]; // List of submissions\n    loaded: boolean; // Whether data has been loaded.\n    haveAllParticipants: boolean; // Whether all participants have been loaded.\n    selectedSubmissionId: number; // Selected submission ID.\n\n    protected moduleId: number; // Module ID the submission belongs to.\n    protected courseId: number; // Course ID the assignment belongs to.\n    protected selectedStatus: string; // The status to see.\n    protected gradedObserver; // Observer to refresh data when a grade changes.\n\n    constructor(navParams: NavParams, sitesProvider: CoreSitesProvider, eventsProvider: CoreEventsProvider,\n            protected domUtils: CoreDomUtilsProvider, protected translate: TranslateService,\n            protected assignProvider: AddonModAssignProvider, protected assignOfflineProvider: AddonModAssignOfflineProvider,\n            protected assignHelper: AddonModAssignHelperProvider) {\n\n        this.moduleId = navParams.get('moduleId');\n        this.courseId = navParams.get('courseId');\n        this.selectedStatus = navParams.get('status');\n\n        if (this.selectedStatus) {\n            if (this.selectedStatus == AddonModAssignProvider.NEED_GRADING) {\n                this.title = this.translate.instant('addon.mod_assign.numberofsubmissionsneedgrading');\n            } else {\n                this.title = this.translate.instant('addon.mod_assign.submissionstatus_' + this.selectedStatus);\n            }\n        } else {\n            this.title = this.translate.instant('addon.mod_assign.numberofparticipants');\n        }\n\n        // Update data if some grade changes.\n        this.gradedObserver = eventsProvider.on(AddonModAssignProvider.GRADED_EVENT, (data) => {\n            if (this.assign && data.assignmentId == this.assign.id && data.userId == sitesProvider.getCurrentSiteUserId()) {\n                // Grade changed, refresh the data.\n                this.loaded = false;\n\n                this.refreshAllData().finally(() => {\n                    this.loaded = true;\n                });\n            }\n        }, sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.fetchAssignment().finally(() => {\n            if (!this.selectedSubmissionId && this.splitviewCtrl.isOn() && this.submissions.length > 0) {\n                // Take first and load it.\n                this.loadSubmission(this.submissions[0]);\n            }\n\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Fetch assignment data.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchAssignment(): Promise<any> {\n        let participants,\n            submissionsData,\n            grades;\n\n        // Get assignment data.\n        return this.assignProvider.getAssignment(this.courseId, this.moduleId).then((assign) => {\n            this.title = assign.name || this.title;\n            this.assign = assign;\n            this.haveAllParticipants = true;\n\n            // Get assignment submissions.\n            return this.assignProvider.getSubmissions(assign.id);\n        }).then((data) => {\n            if (!data.canviewsubmissions) {\n                // User shouldn't be able to reach here.\n                return Promise.reject(null);\n            }\n\n            submissionsData = data;\n\n            // Get the participants.\n            return this.assignHelper.getParticipants(this.assign).then((parts) => {\n                this.haveAllParticipants = true;\n                participants = parts;\n            }).catch(() => {\n                this.haveAllParticipants = false;\n            });\n        }).then(() => {\n            if (!this.assign.markingworkflow) {\n                // Get assignment grades only if workflow is not enabled to check grading date.\n                return this.assignProvider.getAssignmentGrades(this.assign.id).then((assignmentGrades) => {\n                    grades = assignmentGrades;\n                });\n            }\n        }).then(() => {\n            // We want to show the user data on each submission.\n            return this.assignProvider.getSubmissionsUserData(submissionsData.submissions, this.courseId, this.assign.id,\n                    this.assign.blindmarking && !this.assign.revealidentities, participants);\n        }).then((submissions) => {\n\n            // Filter the submissions to get only the ones with the right status and add some extra data.\n            const getNeedGrading = this.selectedStatus == AddonModAssignProvider.NEED_GRADING,\n                searchStatus = getNeedGrading ? AddonModAssignProvider.SUBMISSION_STATUS_SUBMITTED : this.selectedStatus,\n                promises = [];\n\n            this.submissions = [];\n            submissions.forEach((submission) => {\n                if (!searchStatus || searchStatus == submission.status) {\n                    promises.push(this.assignOfflineProvider.getSubmissionGrade(this.assign.id, submission.userid).catch(() => {\n                        // Ignore errors.\n                    }).then((data) => {\n                        let promise,\n                            notSynced = false;\n\n                        // Load offline grades.\n                        if (data && submission.timemodified < data.timemodified) {\n                            notSynced = true;\n                        }\n\n                        if (getNeedGrading) {\n                            // Only show the submissions that need to be graded.\n                            promise = this.assignProvider.needsSubmissionToBeGraded(submission, this.assign.id);\n                        } else {\n                            promise = Promise.resolve(true);\n                        }\n\n                        return promise.then((add) => {\n                            if (!add) {\n                                return;\n                            }\n\n                            if (submission.gradingstatus == 'graded' && !this.assign.markingworkflow) {\n                                // Get the last grade of the submission.\n                                const grade = grades.filter((grade) => {\n                                    return grade.userid == submission.userid;\n                                }).reduce((a, b) => {\n                                    return ( a.timemodified > b.timemodified ? a : b );\n                                });\n\n                                if (grade && grade.timemodified < submission.timemodified) {\n                                    submission.gradingstatus = AddonModAssignProvider.GRADED_FOLLOWUP_SUBMIT;\n                                }\n                            }\n                            submission.statusColor = this.assignProvider.getSubmissionStatusColor(submission.status);\n                            submission.gradingColor = this.assignProvider.getSubmissionGradingStatusColor(submission.gradingstatus);\n\n                            // Show submission status if not submitted for grading.\n                            if (submission.statusColor != 'success' || !submission.gradingstatus) {\n                                submission.statusTranslated = this.translate.instant('addon.mod_assign.submissionstatus_' +\n                                    submission.status);\n                            } else {\n                                submission.statusTranslated = false;\n                            }\n\n                            if (notSynced) {\n                                submission.gradingStatusTranslationId = 'addon.mod_assign.gradenotsynced';\n                                submission.gradingColor = '';\n                            } else if (submission.statusColor != 'danger' || submission.gradingColor != 'danger') {\n                                // Show grading status if one of the statuses is not done.\n                                submission.gradingStatusTranslationId =\n                                    this.assignProvider.getSubmissionGradingStatusTranslationId(submission.gradingstatus);\n                            } else {\n                                submission.gradingStatusTranslationId = false;\n                            }\n\n                            this.submissions.push(submission);\n                        });\n                    }));\n                }\n            });\n\n            return Promise.all(promises);\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n        });\n    }\n\n    /**\n     * Load a certain submission.\n     *\n     * @param {any} submission The submission to load.\n     */\n    loadSubmission(submission: any): void {\n        if (this.selectedSubmissionId === submission.id && this.splitviewCtrl.isOn()) {\n            // Already selected.\n            return;\n        }\n\n        this.selectedSubmissionId = submission.id;\n\n        this.splitviewCtrl.push('AddonModAssignSubmissionReviewPage', {\n            courseId: this.courseId,\n            moduleId: this.moduleId,\n            submitId: submission.submitid,\n            blindId: submission.blindid\n        });\n    }\n\n    /**\n     * Refresh all the data.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected refreshAllData(): Promise<any> {\n        const promises = [];\n\n        promises.push(this.assignProvider.invalidateAssignmentData(this.courseId));\n        if (this.assign) {\n            promises.push(this.assignProvider.invalidateAllSubmissionData(this.assign.id));\n            promises.push(this.assignProvider.invalidateAssignmentUserMappingsData(this.assign.id));\n            promises.push(this.assignProvider.invalidateAssignmentGradesData(this.assign.id));\n            promises.push(this.assignProvider.invalidateListParticipantsData(this.assign.id));\n        }\n\n        return Promise.all(promises).finally(() => {\n            return this.fetchAssignment();\n        });\n    }\n\n    /**\n     * Refresh the list.\n     *\n     * @param {any} refresher Refresher.\n     */\n    refreshList(refresher: any): void {\n        this.refreshAllData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.gradedObserver && this.gradedObserver.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/submission-list/submission-list.ts"],"sourceRoot":""}
>>>>>>> 5632a65c1fdc0002876490b68e6dc6621a0dd43d
