<<<<<<< HEAD
{"version":3,"sources":["../../src/addon/messages/pages/discussion/discussion.module.ts","../../src/addon/messages/pages/discussion/discussion.ts"],"names":[],"mappings":"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","file":"103.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AddonMessagesDiscussionPage } from './discussion';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { CorePipesModule } from '@pipes/pipes.module';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonMessagesDiscussionPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        CorePipesModule,\r\n        IonicPageModule.forChild(AddonMessagesDiscussionPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n})\r\nexport class AddonMessagesDiscussionPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/pages/discussion/discussion.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, OnDestroy, ViewChild } from '@angular/core';\r\nimport { IonicPage, NavParams, NavController, Content } from 'ionic-angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CoreEventsProvider } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { AddonMessagesProvider } from '../../providers/messages';\r\nimport { AddonMessagesSyncProvider } from '../../providers/sync';\r\nimport { CoreUserProvider } from '@core/user/providers/user';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreUtilsProvider } from '@providers/utils/utils';\r\nimport { CoreLoggerProvider } from '@providers/logger';\r\nimport { CoreAppProvider } from '@providers/app';\r\nimport { coreSlideInOut } from '@classes/animations';\r\nimport { Md5 } from 'ts-md5/dist/md5';\r\nimport * as moment from 'moment';\r\n\r\n/**\r\n * Page that displays a message discussion page.\r\n */\r\n@IonicPage({ segment: 'addon-messages-discussion' })\r\n@Component({\r\n    selector: 'page-addon-messages-discussion',\r\n    templateUrl: 'discussion.html',\r\n    animations: [coreSlideInOut]\r\n})\r\nexport class AddonMessagesDiscussionPage implements OnDestroy {\r\n    @ViewChild(Content) content: Content;\r\n\r\n    protected siteId: string;\r\n    protected fetching: boolean;\r\n    protected polling;\r\n    protected logger;\r\n\r\n    protected unreadMessageFrom = 0;\r\n    protected messagesBeingSent = 0;\r\n    protected pagesLoaded = 1;\r\n    protected lastMessage = {text: '', timecreated: 0};\r\n    protected keepMessageMap = {};\r\n    protected syncObserver: any;\r\n    protected oldContentHeight = 0;\r\n    protected keyboardObserver: any;\r\n\r\n    userId: number;\r\n    currentUserId: number;\r\n    title: string;\r\n    profileLink: string;\r\n    showProfileLink: boolean;\r\n    loaded = false;\r\n    showKeyboard = false;\r\n    canLoadMore = false;\r\n    messages = [];\r\n    showDelete = false;\r\n    canDelete = false;\r\n    scrollBottom = true;\r\n    viewDestroyed = false;\r\n\r\n    constructor(private eventsProvider: CoreEventsProvider, sitesProvider: CoreSitesProvider, navParams: NavParams,\r\n            private userProvider: CoreUserProvider, private navCtrl: NavController, private messagesSync: AddonMessagesSyncProvider,\r\n            private domUtils: CoreDomUtilsProvider, private messagesProvider: AddonMessagesProvider, logger: CoreLoggerProvider,\r\n            private utils: CoreUtilsProvider, private appProvider: CoreAppProvider, private translate: TranslateService) {\r\n        this.siteId = sitesProvider.getCurrentSiteId();\r\n        this.currentUserId = sitesProvider.getCurrentSiteUserId();\r\n\r\n        this.logger = logger.getInstance('AddonMessagesDiscussionPage');\r\n\r\n        this.userId = navParams.get('userId');\r\n        this.showKeyboard = navParams.get('showKeyboard');\r\n\r\n        // Refresh data if this discussion is synchronized automatically.\r\n        this.syncObserver = eventsProvider.on(AddonMessagesSyncProvider.AUTO_SYNCED, (data) => {\r\n            if (data.userId == this.userId) {\r\n                // Fetch messages.\r\n                this.fetchData();\r\n\r\n                // Show first warning if any.\r\n                if (data.warnings && data.warnings[0]) {\r\n                    this.domUtils.showErrorModal(data.warnings[0]);\r\n                }\r\n            }\r\n        }, this.siteId);\r\n    }\r\n\r\n    /**\r\n     * Adds a new message to the message list.\r\n     *\r\n     * @param {any} message Message to be added.\r\n     * @param {boolean} [keep=true] If set the keep flag or not.\r\n     */\r\n    protected addMessage(message: any, keep: boolean = true): void {\r\n        // Use smallmessage instead of message ID because ID changes when a message is read.\r\n        message.hash = Md5.hashAsciiStr(message.smallmessage) + '#' + message.timecreated + '#' + message.useridfrom;\r\n        if (typeof this.keepMessageMap[message.hash] === 'undefined') {\r\n            // Message not added to the list. Add it now.\r\n            this.messages.push(message);\r\n        }\r\n        // Message needs to be kept in the list.\r\n        this.keepMessageMap[message.hash] = keep;\r\n    }\r\n\r\n    /**\r\n     * Remove a message if it shouldn't be in the list anymore.\r\n     *\r\n     * @param {string} hash Hash of the message to be removed.\r\n     */\r\n    protected removeMessage(hash: any): void {\r\n        if (this.keepMessageMap[hash]) {\r\n            // Selected to keep it, clear the flag.\r\n            this.keepMessageMap[hash] = false;\r\n\r\n            return;\r\n        }\r\n\r\n        delete this.keepMessageMap[hash];\r\n\r\n        const position = this.messages.findIndex((message) => {\r\n            return message.hash == hash;\r\n        });\r\n        if (position > 0) {\r\n            this.messages.splice(position, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Runs when the page has loaded. This event only happens once per page being created.\r\n     * If a page leaves but is cached, then this event will not fire again on a subsequent viewing.\r\n     * Setup code for the page.\r\n     */\r\n    ionViewDidLoad(): void {\r\n        // Disable the profile button if we're already coming from a profile.\r\n        const backViewPage = this.navCtrl.getPrevious() && this.navCtrl.getPrevious().component.name;\r\n        this.showProfileLink = !backViewPage || backViewPage !== 'CoreUserProfilePage';\r\n\r\n        // Get the user profile to retrieve the user fullname and image.\r\n        this.userProvider.getProfile(this.userId, undefined, true).then((user) => {\r\n            if (!this.title) {\r\n                this.title = user.fullname;\r\n            }\r\n            this.profileLink = user.profileimageurl;\r\n        });\r\n\r\n        // Synchronize messages if needed.\r\n        this.messagesSync.syncDiscussion(this.userId).catch(() => {\r\n            // Ignore errors.\r\n        }).then((warnings) => {\r\n            if (warnings && warnings[0]) {\r\n                this.domUtils.showErrorModal(warnings[0]);\r\n            }\r\n\r\n            // Fetch the messages for the first time.\r\n            return this.fetchData().then(() => {\r\n                if (!this.title && this.messages.length) {\r\n                    // Didn't receive the fullname via argument. Try to get it from messages.\r\n                    // It's possible that name cannot be resolved when no messages were yet exchanged.\r\n                    if (this.messages[0].useridto != this.currentUserId) {\r\n                        this.title = this.messages[0].usertofullname || '';\r\n                    } else {\r\n                        this.title = this.messages[0].userfromfullname || '';\r\n                    }\r\n                }\r\n            }).catch((error) => {\r\n                this.domUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingmessages', true);\r\n            }).finally(() => {\r\n                this.checkCanDelete();\r\n                this.resizeContent();\r\n                this.loaded = true;\r\n            });\r\n        });\r\n\r\n        // Recalculate footer position when keyboard is shown or hidden.\r\n        this.keyboardObserver = this.eventsProvider.on(CoreEventsProvider.KEYBOARD_CHANGE, (kbHeight) => {\r\n            this.content.resize();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Runs when the page has fully entered and is now the active page.\r\n     * This event will fire, whether it was the first load or a cached page.\r\n     */\r\n    ionViewDidEnter(): void {\r\n        this.setPolling();\r\n    }\r\n\r\n    /**\r\n     * Runs when the page is about to leave and no longer be the active page.\r\n     */\r\n    ionViewWillLeave(): void {\r\n        this.unsetPolling();\r\n    }\r\n\r\n    /**\r\n     * Convenience function to fetch messages.\r\n     * @return {Promise<any>} Resolved when done.\r\n     */\r\n    protected fetchData(): Promise<any> {\r\n        this.logger.debug(`Polling new messages for discussion with user '${this.userId}'`);\r\n        if (this.messagesBeingSent > 0) {\r\n            // We do not poll while a message is being sent or we could confuse the user.\r\n            // Otherwise, his message would disappear from the list, and he'd have to wait for the interval to check for messages.\r\n            return Promise.reject(null);\r\n        } else if (this.fetching) {\r\n            // Already fetching.\r\n            return Promise.reject(null);\r\n        }\r\n\r\n        this.fetching = true;\r\n\r\n        // Wait for synchronization process to finish.\r\n        return this.messagesSync.waitForSync(this.userId).then(() => {\r\n            // Fetch messages. Invalidate the cache before fetching.\r\n            return this.messagesProvider.invalidateDiscussionCache(this.userId).catch(() => {\r\n                // Ignore errors.\r\n            });\r\n        }).then(() => {\r\n            return this.getDiscussion(this.pagesLoaded);\r\n        }).then((messages) => {\r\n            if (this.viewDestroyed) {\r\n                return Promise.resolve();\r\n            }\r\n\r\n            // Check if we are at the bottom to scroll it after render.\r\n            this.scrollBottom = this.domUtils.getScrollHeight(this.content) - this.domUtils.getScrollTop(this.content) ===\r\n                this.domUtils.getContentHeight(this.content);\r\n\r\n            if (this.messagesBeingSent > 0) {\r\n                // Ignore polling due to a race condition.\r\n                return Promise.reject(null);\r\n            }\r\n\r\n            // Add new messages to the list and mark the messages that should still be displayed.\r\n            messages.forEach((message) => {\r\n                this.addMessage(message);\r\n            });\r\n\r\n            // Remove messages that shouldn't be in the list anymore.\r\n            for (const hash in this.keepMessageMap) {\r\n                this.removeMessage(hash);\r\n            }\r\n\r\n            // Sort the messages.\r\n            this.messagesProvider.sortMessages(this.messages);\r\n\r\n            // Notify that there can be a new message.\r\n            this.notifyNewMessage();\r\n\r\n            // Mark retrieved messages as read if they are not.\r\n            this.markMessagesAsRead();\r\n        }).finally(() => {\r\n            this.fetching = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get a discussion. Can load several \"pages\".\r\n     *\r\n     * @param  {number}  pagesToLoad          Number of pages to load.\r\n     * @param  {number}  [lfReceivedUnread=0] Number of unread received messages already fetched, so fetch will be done from this.\r\n     * @param  {number}  [lfReceivedRead=0]   Number of read received messages already fetched, so fetch will be done from this.\r\n     * @param  {number}  [lfSentUnread=0]     Number of unread sent messages already fetched, so fetch will be done from this.\r\n     * @param  {number}  [lfSentRead=0]       Number of read sent messages already fetched, so fetch will be done from this.\r\n     * @return {Promise<any>}  Resolved when done.\r\n     */\r\n    protected getDiscussion(pagesToLoad: number, lfReceivedUnread: number = 0, lfReceivedRead: number = 0, lfSentUnread: number = 0,\r\n            lfSentRead: number = 0): Promise<any> {\r\n\r\n        // Only get offline messages if we're loading the first \"page\".\r\n        const excludePending = lfReceivedUnread > 0 || lfReceivedRead > 0 || lfSentUnread > 0 || lfSentRead > 0;\r\n\r\n        // Get next messages.\r\n        return this.messagesProvider.getDiscussion(this.userId, excludePending, lfReceivedUnread, lfReceivedRead, lfSentUnread,\r\n                lfSentRead).then((result) => {\r\n\r\n            pagesToLoad--;\r\n            if (pagesToLoad > 0 && result.canLoadMore) {\r\n                // More pages to load. Calculate new limit froms.\r\n                result.messages.forEach((message) => {\r\n                    if (!message.pending) {\r\n                        if (message.useridfrom == this.userId) {\r\n                            if (message.read) {\r\n                                lfReceivedRead++;\r\n                            } else {\r\n                                lfReceivedUnread++;\r\n                            }\r\n                        } else {\r\n                            if (message.read) {\r\n                                lfSentRead++;\r\n                            } else {\r\n                                lfSentUnread++;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // Get next messages.\r\n                return this.getDiscussion(pagesToLoad, lfReceivedUnread, lfReceivedRead, lfSentUnread, lfSentRead)\r\n                        .then((nextMessages) => {\r\n                    return result.messages.concat(nextMessages);\r\n                });\r\n            } else {\r\n                // No more messages to load, return them.\r\n                this.canLoadMore = result.canLoadMore;\r\n\r\n                return result.messages;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Mark messages as read.\r\n     */\r\n    protected markMessagesAsRead(): void {\r\n        let readChanged = false;\r\n        const promises = [];\r\n\r\n        if (this.messagesProvider.isMarkAllMessagesReadEnabled()) {\r\n            let messageUnreadFound = false;\r\n            // Mark all messages at a time if one messages is unread.\r\n            for (const x in this.messages) {\r\n                const message = this.messages[x];\r\n                // If an unread message is found, mark all messages as read.\r\n                if (message.useridfrom != this.currentUserId && message.read == 0) {\r\n                    messageUnreadFound = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (messageUnreadFound) {\r\n                this.setUnreadLabelPosition();\r\n                promises.push(this.messagesProvider.markAllMessagesRead(this.userId).then(() => {\r\n                    readChanged = true;\r\n                    // Mark all messages as read.\r\n                    this.messages.forEach((message) => {\r\n                        message.read = 1;\r\n                    });\r\n                }));\r\n            }\r\n        } else {\r\n            this.setUnreadLabelPosition();\r\n            // Mark each message as read one by one.\r\n            this.messages.forEach((message) => {\r\n                // If the message is unread, call this.messagesProvider.markMessageRead.\r\n                if (message.useridfrom != this.currentUserId && message.read == 0) {\r\n                    promises.push(this.messagesProvider.markMessageRead(message.id).then(() => {\r\n                        readChanged = true;\r\n                        message.read = 1;\r\n                    }));\r\n                }\r\n            });\r\n        }\r\n\r\n        Promise.all(promises).finally(() => {\r\n            if (readChanged) {\r\n                this.eventsProvider.trigger(AddonMessagesProvider.READ_CHANGED_EVENT, {\r\n                    userId: this.userId\r\n                }, this.siteId);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify the last message found so discussions list controller can tell if last message should be updated.\r\n     */\r\n    protected notifyNewMessage(): void {\r\n        const last = this.messages[this.messages.length - 1];\r\n\r\n        let trigger = false;\r\n        if (!last) {\r\n            this.lastMessage = {text: '', timecreated: 0};\r\n            trigger = true;\r\n        } else if (last.text !== this.lastMessage.text || last.timecreated !== this.lastMessage.timecreated) {\r\n            this.lastMessage = {text: last.text, timecreated: last.timecreated};\r\n            trigger = true;\r\n        }\r\n\r\n        if (trigger) {\r\n            // Update discussions last message.\r\n            this.eventsProvider.trigger(AddonMessagesProvider.NEW_MESSAGE_EVENT, {\r\n                userId: this.userId,\r\n                message: this.lastMessage.text,\r\n                timecreated: this.lastMessage.timecreated\r\n            }, this.siteId);\r\n\r\n            // Update navBar links and buttons.\r\n            const newCanDelete = (last && last.id && this.messages.length == 1) || this.messages.length > 1;\r\n            if (this.canDelete != newCanDelete) {\r\n                this.checkCanDelete();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set the place where the unread label position has to be.\r\n     */\r\n    protected setUnreadLabelPosition(): void {\r\n        if (this.unreadMessageFrom != 0) {\r\n            return;\r\n        }\r\n\r\n        let previousMessageRead = false;\r\n\r\n        for (const x in this.messages) {\r\n            const message = this.messages[x];\r\n            if (message.useridfrom != this.currentUserId) {\r\n                // Place unread from message label only once.\r\n                message.unreadFrom = message.read == 0 && previousMessageRead;\r\n\r\n                if (message.unreadFrom) {\r\n                    // Save where the label is placed.\r\n                    this.unreadMessageFrom = parseInt(message.id, 10);\r\n                    break;\r\n                }\r\n\r\n                previousMessageRead = message.read != 0;\r\n            }\r\n        }\r\n\r\n        // Do not update the message unread from label on next refresh.\r\n        if (this.unreadMessageFrom == 0) {\r\n            // Using negative to indicate the label is not placed but should not be placed.\r\n            this.unreadMessageFrom = -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if there's any message in the list that can be deleted.\r\n     */\r\n    protected checkCanDelete(): void {\r\n        // All messages being sent should be at the end of the list.\r\n        const first = this.messages[0];\r\n        this.canDelete = first && !first.sending;\r\n    }\r\n\r\n    /**\r\n     * Hide unread label when sending messages.\r\n     */\r\n    protected hideUnreadLabel(): void {\r\n        if (this.unreadMessageFrom > 0) {\r\n            for (const x in this.messages) {\r\n                const message = this.messages[x];\r\n                if (message.id == this.unreadMessageFrom) {\r\n                    message.unreadFrom = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            // Label hidden.\r\n            this.unreadMessageFrom = -1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wait until fetching is false.\r\n     * @return {Promise<void>} Resolved when done.\r\n     */\r\n    protected waitForFetch(): Promise<void> {\r\n        if (!this.fetching) {\r\n            return Promise.resolve();\r\n        }\r\n\r\n        const deferred = this.utils.promiseDefer();\r\n\r\n        setTimeout(() => {\r\n            return this.waitForFetch().finally(() => {\r\n                deferred.resolve();\r\n            });\r\n        }, 400);\r\n\r\n        return deferred.promise;\r\n    }\r\n\r\n    /**\r\n     * Set a polling to get new messages every certain time.\r\n     */\r\n    protected setPolling(): void {\r\n        if (!this.polling) {\r\n            // Start polling.\r\n            this.polling = setInterval(() => {\r\n                this.fetchData().catch(() => {\r\n                    // Ignore errors.\r\n                });\r\n            }, AddonMessagesProvider.POLL_INTERVAL);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unset polling.\r\n     */\r\n    protected unsetPolling(): void {\r\n        if (this.polling) {\r\n            this.logger.debug(`Cancelling polling for conversation with user '${this.userId}'`);\r\n            clearInterval(this.polling);\r\n            this.polling = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Copy message to clipboard\r\n     *\r\n     * @param {string} text Message text to be copied.\r\n     */\r\n    copyMessage(text: string): void {\r\n        this.utils.copyToClipboard(text);\r\n    }\r\n\r\n    /**\r\n     * Function to delete a message.\r\n     *\r\n     * @param {any} message  Message object to delete.\r\n     * @param {number} index Index where the mesasge is to delete it from the view.\r\n     */\r\n    deleteMessage(message: any, index: number): void {\r\n        const langKey = message.pending ? 'core.areyousure' : 'addon.messages.deletemessageconfirmation';\r\n        this.domUtils.showConfirm(this.translate.instant(langKey)).then(() => {\r\n            const modal = this.domUtils.showModalLoading('core.deleting', true);\r\n\r\n            return this.messagesProvider.deleteMessage(message).then(() => {\r\n                 // Remove message from the list without having to wait for re-fetch.\r\n                this.messages.splice(index, 1);\r\n                this.removeMessage(message.hash);\r\n                this.notifyNewMessage();\r\n\r\n                this.fetchData(); // Re-fetch messages to update cached data.\r\n            }).finally(() => {\r\n                modal.dismiss();\r\n            });\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'addon.messages.errordeletemessage', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to load previous messages.\r\n     *\r\n     * @param {any} [infiniteScroll] Infinite scroll object.\r\n     * @return {Promise<any>} Resolved when done.\r\n     */\r\n    loadPrevious(infiniteScroll: any): Promise<any> {\r\n        // If there is an ongoing fetch, wait for it to finish.\r\n        return this.waitForFetch().finally(() => {\r\n            this.pagesLoaded++;\r\n\r\n            this.fetchData().catch((error) => {\r\n                this.pagesLoaded--;\r\n                this.domUtils.showErrorModalDefault(error, 'addon.messages.errorwhileretrievingmessages', true);\r\n            }).finally(() => {\r\n                infiniteScroll.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Content or scroll has been resized. For content, only call it if it's been added on top.\r\n     */\r\n    resizeContent(): void {\r\n        let top = this.content.getContentDimensions().scrollTop;\r\n        this.content.resize();\r\n\r\n        // Wait for new content height to be calculated.\r\n        setTimeout(() => {\r\n            // Visible content size changed, maintain the bottom position.\r\n            if (!this.viewDestroyed && this.content && this.domUtils.getContentHeight(this.content) != this.oldContentHeight) {\r\n                if (!top) {\r\n                    top = this.content.getContentDimensions().scrollTop;\r\n                }\r\n\r\n                top += this.oldContentHeight - this.domUtils.getContentHeight(this.content);\r\n                this.oldContentHeight = this.domUtils.getContentHeight(this.content);\r\n\r\n                this.domUtils.scrollTo(this.content, 0, top, 0);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Scroll bottom when render has finished.\r\n     */\r\n    scrollToBottom(): void {\r\n        // Check if scroll is at bottom. If so, scroll bottom after rendering since there might be something new.\r\n        if (this.scrollBottom) {\r\n             // Need a timeout to leave time to the view to be rendered.\r\n            setTimeout(() => {\r\n                if (!this.viewDestroyed) {\r\n                    this.domUtils.scrollToBottom(this.content, 0);\r\n                }\r\n            });\r\n            this.scrollBottom = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sends a message to the server.\r\n     * @param {string} text Message text.\r\n     */\r\n    sendMessage(text: string): void {\r\n        let message;\r\n\r\n        this.hideUnreadLabel();\r\n\r\n        this.showDelete = false;\r\n        this.scrollBottom = true;\r\n\r\n        message = {\r\n            pending: true,\r\n            sending: true,\r\n            useridfrom: this.currentUserId,\r\n            smallmessage: text,\r\n            text: text,\r\n            timecreated: new Date().getTime()\r\n        };\r\n        this.addMessage(message, false);\r\n\r\n        this.messagesBeingSent++;\r\n\r\n        // If there is an ongoing fetch, wait for it to finish.\r\n        // Otherwise, if a message is sent while fetching it could disappear until the next fetch.\r\n        this.waitForFetch().finally(() => {\r\n            this.messagesProvider.sendMessage(this.userId, text).then((data) => {\r\n                let promise;\r\n\r\n                this.messagesBeingSent--;\r\n\r\n                if (data.sent) {\r\n                    // Message was sent, fetch messages right now.\r\n                    promise = this.fetchData();\r\n                } else {\r\n                    promise = Promise.reject(null);\r\n                }\r\n\r\n                promise.catch(() => {\r\n                    // Fetch failed or is offline message, mark the message as sent.\r\n                    // If fetch is successful there's no need to mark it because the fetch will already show the message received.\r\n                    message.sending = false;\r\n                    if (data.sent) {\r\n                        // Message sent to server, not pending anymore.\r\n                        message.pending = false;\r\n                    } else if (data.message) {\r\n                        message.timecreated = data.message.timecreated;\r\n                    }\r\n\r\n                    this.notifyNewMessage();\r\n                });\r\n            }).catch((error) => {\r\n                this.messagesBeingSent--;\r\n\r\n                // Only close the keyboard if an error happens.\r\n                // We want the user to be able to send multiple messages without the keyboard being closed.\r\n                this.appProvider.closeKeyboard();\r\n\r\n                this.domUtils.showErrorModalDefault(error, 'addon.messages.messagenotsent', true);\r\n                this.removeMessage(message.hash);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check date should be shown on message list for the current message.\r\n     * If date has changed from previous to current message it should be shown.\r\n     *\r\n     * @param {any} message       Current message where to show the date.\r\n     * @param {any} [prevMessage] Previous message where to compare the date with.\r\n     * @return {boolean}  If date has changed and should be shown.\r\n     */\r\n    showDate(message: any, prevMessage?: any): boolean {\r\n        if (!prevMessage) {\r\n            // First message, show it.\r\n            return true;\r\n        } else if (message.pending) {\r\n            // If pending, it has no date, not show.\r\n            return false;\r\n        }\r\n\r\n        // Check if day has changed.\r\n        return !moment(message.timecreated).isSame(prevMessage.timecreated, 'day');\r\n    }\r\n\r\n    /**\r\n     * Toggles delete state.\r\n     */\r\n    toggleDelete(): void {\r\n        this.showDelete = !this.showDelete;\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        // Unset again, just in case.\r\n        this.unsetPolling();\r\n        this.syncObserver && this.syncObserver.off();\r\n        this.keyboardObserver && this.keyboardObserver.off();\r\n        this.viewDestroyed = true;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/messages/pages/discussion/discussion.ts"],"sourceRoot":""}
=======
{"version":3,"sources":["../../src/addon/mod/assign/pages/edit/edit.module.ts","../../src/addon/mod/assign/pages/edit/edit.ts"],"names":[],"mappings":"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","file":"103.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonModAssignComponentsModule } from '../../components/components.module';\nimport { AddonModAssignEditPage } from './edit';\n\n@NgModule({\n    declarations: [\n        AddonModAssignEditPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        AddonModAssignComponentsModule,\n        IonicPageModule.forChild(AddonModAssignEditPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModAssignEditPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/edit/edit.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreSyncProvider } from '@providers/sync';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreFileUploaderHelperProvider } from '@core/fileuploader/providers/helper';\nimport { AddonModAssignProvider } from '../../providers/assign';\nimport { AddonModAssignOfflineProvider } from '../../providers/assign-offline';\nimport { AddonModAssignSyncProvider } from '../../providers/assign-sync';\nimport { AddonModAssignHelperProvider } from '../../providers/helper';\n\n/**\n * Page that allows adding or editing an assigment submission.\n */\n@IonicPage({ segment: 'addon-mod-assign-edit' })\n@Component({\n    selector: 'page-addon-mod-assign-edit',\n    templateUrl: 'edit.html',\n})\nexport class AddonModAssignEditPage implements OnInit, OnDestroy {\n    title: string; // Title to display.\n    assign: any; // Assignment.\n    courseId: number; // Course ID the assignment belongs to.\n    userSubmission: any; // The user submission.\n    allowOffline: boolean; // Whether offline is allowed.\n    submissionStatement: string; // The submission statement.\n    submissionStatementAccepted: boolean; // Whether submission statement is accepted.\n    loaded: boolean; // Whether data has been loaded.\n\n    protected moduleId: number; // Module ID the submission belongs to.\n    protected userId: number; // User doing the submission.\n    protected isBlind: boolean; // Whether blind is used.\n    protected editText: string; // \"Edit submission\" translated text.\n    protected saveOffline = false; // Whether to save data in offline.\n    protected hasOffline = false; // Whether the assignment has offline data.\n    protected isDestroyed = false; // Whether the component has been destroyed.\n    protected forceLeave = false; // To allow leaving the page without checking for changes.\n\n    constructor(navParams: NavParams, protected navCtrl: NavController, protected sitesProvider: CoreSitesProvider,\n            protected syncProvider: CoreSyncProvider, protected domUtils: CoreDomUtilsProvider,\n            protected translate: TranslateService, protected fileUploaderHelper: CoreFileUploaderHelperProvider,\n            protected eventsProvider: CoreEventsProvider, protected assignProvider: AddonModAssignProvider,\n            protected assignOfflineProvider: AddonModAssignOfflineProvider, protected assignHelper: AddonModAssignHelperProvider,\n            protected assignSyncProvider: AddonModAssignSyncProvider) {\n\n        this.moduleId = navParams.get('moduleId');\n        this.courseId = navParams.get('courseId');\n        this.userId = sitesProvider.getCurrentSiteUserId(); // Right now we can only edit current user's submissions.\n        this.isBlind = !!navParams.get('blindId');\n\n        this.editText = translate.instant('addon.mod_assign.editsubmission');\n        this.title = this.editText;\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.fetchAssignment().finally(() => {\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Check if we can leave the page or not.\n     *\n     * @return {boolean|Promise<void>} Resolved if we can leave it, rejected if not.\n     */\n    ionViewCanLeave(): boolean | Promise<void> {\n        if (this.forceLeave) {\n            return true;\n        }\n\n        // Check if data has changed.\n        return this.hasDataChanged().then((changed) => {\n            if (changed) {\n                return this.domUtils.showConfirm(this.translate.instant('core.confirmcanceledit'));\n            }\n        }).then(() => {\n            // Nothing has changed or user confirmed to leave. Clear temporary data from plugins.\n            this.assignHelper.clearSubmissionPluginTmpData(this.assign, this.userSubmission, this.getInputData());\n        });\n    }\n\n    /**\n     * Fetch assignment data.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchAssignment(): Promise<any> {\n        const currentUserId = this.sitesProvider.getCurrentSiteUserId();\n\n        // Get assignment data.\n        return this.assignProvider.getAssignment(this.courseId, this.moduleId).then((assign) => {\n            this.assign = assign;\n            this.title = assign.name || this.title;\n\n            if (!this.isDestroyed) {\n                // Block the assignment.\n                this.syncProvider.blockOperation(AddonModAssignProvider.COMPONENT, assign.id);\n            }\n\n            // Wait for sync to be over (if any).\n            return this.assignSyncProvider.waitForSync(assign.id);\n        }).then(() => {\n\n            // Get submission status. Ignore cache to get the latest data.\n            return this.assignProvider.getSubmissionStatus(this.assign.id, this.userId, this.isBlind, false, true).catch((err) => {\n                // Cannot connect. Get cached data.\n                return this.assignProvider.getSubmissionStatus(this.assign.id, this.userId, this.isBlind).then((response) => {\n                    const userSubmission = this.assignProvider.getSubmissionObjectFromAttempt(this.assign, response.lastattempt);\n\n                    // Check if the user can edit it in offline.\n                    return this.assignHelper.canEditSubmissionOffline(this.assign, userSubmission).then((canEditOffline) => {\n                        if (canEditOffline) {\n                            return response;\n                        }\n\n                        // Submission cannot be edited in offline, reject.\n                        this.allowOffline = false;\n\n                        return Promise.reject(err);\n                    });\n                });\n            }).then((response) => {\n                if (!response.lastattempt.canedit) {\n                    // Can't edit. Reject.\n                    return Promise.reject(this.translate.instant('core.nopermissions', {$a: this.editText}));\n                }\n\n                this.userSubmission = this.assignProvider.getSubmissionObjectFromAttempt(this.assign, response.lastattempt);\n                this.allowOffline = true; // If offline isn't allowed we shouldn't have reached this point.\n\n                // Only show submission statement if we are editing our own submission.\n                if (this.assign.requiresubmissionstatement && !this.assign.submissiondrafts && this.userId == currentUserId) {\n                    this.submissionStatement = this.assign.submissionstatement;\n                } else {\n                    this.submissionStatement = undefined;\n                }\n\n                // Check if there's any offline data for this submission.\n                return this.assignOfflineProvider.getSubmission(this.assign.id, this.userId).then((data) => {\n                    this.hasOffline = data && data.plugindata && Object.keys(data.plugindata).length > 0;\n                }).catch(() => {\n                    // No offline data found.\n                    this.hasOffline = false;\n                });\n            });\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n\n            // Leave the player.\n            this.leaveWithoutCheck();\n        });\n    }\n\n    /**\n     * Get the input data.\n     *\n     * @return {any} Input data.\n     */\n    protected getInputData(): any {\n        return this.domUtils.getDataFromForm(document.forms['addon-mod_assign-edit-form']);\n    }\n\n    /**\n     * Check if data has changed.\n     *\n     * @return {Promise<boolean>} Promise resolved with boolean: whether data has changed.\n     */\n    protected hasDataChanged(): Promise<boolean> {\n        // Usually the hasSubmissionDataChanged call will be resolved inmediately, causing the modal to be shown just an instant.\n        // We'll wait a bit before showing it to prevent this \"blink\".\n        let modal,\n            showModal = true;\n\n        setTimeout(() => {\n            if (showModal) {\n                modal = this.domUtils.showModalLoading();\n            }\n        }, 100);\n\n        const data = this.getInputData();\n\n        return this.assignHelper.hasSubmissionDataChanged(this.assign, this.userSubmission, data).finally(() => {\n           if (modal) {\n                modal.dismiss();\n            } else {\n                showModal = false;\n            }\n        });\n    }\n\n    /**\n     * Leave the view without checking for changes.\n     */\n    protected leaveWithoutCheck(): void {\n        this.forceLeave = true;\n        this.navCtrl.pop();\n    }\n\n    /**\n     * Get data to submit based on the input data.\n     *\n     * @param {any} inputData The input data.\n     * @return {Promise<any>} Promise resolved with the data to submit.\n     */\n    protected prepareSubmissionData(inputData: any): Promise<any> {\n        // If there's offline data, always save it in offline.\n        this.saveOffline = this.hasOffline;\n\n        return this.assignHelper.prepareSubmissionPluginData(this.assign, this.userSubmission, inputData, this.hasOffline)\n                .catch((error) => {\n\n            if (this.allowOffline && !this.saveOffline) {\n                // Cannot submit in online, prepare for offline usage.\n                this.saveOffline = true;\n\n                return this.assignHelper.prepareSubmissionPluginData(this.assign, this.userSubmission, inputData, true);\n            }\n\n            return Promise.reject(error);\n        });\n    }\n\n    /**\n     * Save the submission.\n     */\n    save(): void {\n        // Check if data has changed.\n        this.hasDataChanged().then((changed) => {\n            if (changed) {\n                this.saveSubmission().then(() => {\n                    this.leaveWithoutCheck();\n                }).catch((error) => {\n                    this.domUtils.showErrorModalDefault(error, 'Error saving submission.');\n                });\n            } else {\n                // Nothing to save, just go back.\n                this.leaveWithoutCheck();\n            }\n        });\n    }\n\n    /**\n     * Save the submission.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected saveSubmission(): Promise<any> {\n        const inputData = this.getInputData();\n\n        if (this.submissionStatement && (!inputData.submissionstatement || inputData.submissionstatement === 'false')) {\n            return Promise.reject(this.translate.instant('addon.mod_assign.acceptsubmissionstatement'));\n        }\n\n        let modal = this.domUtils.showModalLoading();\n\n        // Get size to ask for confirmation.\n        return this.assignHelper.getSubmissionSizeForEdit(this.assign, this.userSubmission, inputData).catch(() => {\n            // Error calculating size, return -1.\n            return -1;\n        }).then((size) => {\n            modal.dismiss();\n\n            // Confirm action.\n            return this.fileUploaderHelper.confirmUploadFile(size, true, this.allowOffline);\n        }).then(() => {\n            modal = this.domUtils.showModalLoading('core.sending', true);\n\n            return this.prepareSubmissionData(inputData).then((pluginData) => {\n                if (!Object.keys(pluginData).length) {\n                    // Nothing to save.\n                    return;\n                }\n\n                let promise;\n\n                if (this.saveOffline) {\n                    // Save submission in offline.\n                    promise = this.assignOfflineProvider.saveSubmission(this.assign.id, this.courseId, pluginData,\n                            this.userSubmission.timemodified, !this.assign.submissiondrafts, this.userId);\n                } else {\n                    // Try to send it to server.\n                    promise = this.assignProvider.saveSubmission(this.assign.id, this.courseId, pluginData, this.allowOffline,\n                            this.userSubmission.timemodified, this.assign.submissiondrafts, this.userId);\n                }\n\n                return promise.then(() => {\n                    // Submission saved, trigger event.\n                    const params = {\n                        assignmentId: this.assign.id,\n                        submissionId: this.userSubmission.id,\n                        userId: this.userId,\n                    };\n\n                    this.eventsProvider.trigger(AddonModAssignProvider.SUBMISSION_SAVED_EVENT, params,\n                            this.sitesProvider.getCurrentSiteId());\n\n                    if (!this.assign.submissiondrafts) {\n                        // No drafts allowed, so it was submitted. Trigger event.\n                        this.eventsProvider.trigger(AddonModAssignProvider.SUBMITTED_FOR_GRADING_EVENT, params,\n                                this.sitesProvider.getCurrentSiteId());\n                    }\n                });\n            });\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n\n        // Unblock the assignment.\n        if (this.assign) {\n            this.syncProvider.unblockOperation(AddonModAssignProvider.COMPONENT, this.assign.id);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/edit/edit.ts"],"sourceRoot":""}
>>>>>>> 5632a65c1fdc0002876490b68e6dc6621a0dd43d
