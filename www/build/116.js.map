<<<<<<< HEAD
{"version":3,"sources":["../../src/addon/badges/pages/user-badges/user-badges.module.ts","../../src/addon/badges/pages/user-badges/user-badges.ts"],"names":[],"mappings":"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","file":"116.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { CorePipesModule } from '@pipes/pipes.module';\r\nimport { AddonBadgesUserBadgesPage } from './user-badges';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonBadgesUserBadgesPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        CorePipesModule,\r\n        IonicPageModule.forChild(AddonBadgesUserBadgesPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n})\r\nexport class AddonBadgesUserBadgesPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/badges/pages/user-badges/user-badges.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, ViewChild } from '@angular/core';\r\nimport { IonicPage, Content, NavParams } from 'ionic-angular';\r\nimport { AddonBadgesProvider } from '../../providers/badges';\r\nimport { CoreTimeUtilsProvider } from '@providers/utils/time';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\r\n\r\n/**\r\n * Page that displays the list of calendar events.\r\n */\r\n@IonicPage({ segment: 'addon-badges-user-badges' })\r\n@Component({\r\n    selector: 'page-addon-badges-user-badges',\r\n    templateUrl: 'user-badges.html',\r\n})\r\nexport class AddonBadgesUserBadgesPage {\r\n    @ViewChild(Content) content: Content;\r\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\r\n\r\n    courseId: number;\r\n    userId: number;\r\n\r\n    badgesLoaded = false;\r\n    badges = [];\r\n    currentTime = 0;\r\n    badgeHash: string;\r\n\r\n    constructor(navParams: NavParams, sitesProvider: CoreSitesProvider, private badgesProvider: AddonBadgesProvider,\r\n            private domUtils: CoreDomUtilsProvider, private timeUtils: CoreTimeUtilsProvider) {\r\n\r\n        this.courseId = navParams.get('courseId') || 0; // Use 0 for site badges.\r\n        this.userId = navParams.get('userId') || sitesProvider.getCurrentSite().getUserId();\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ionViewDidLoad(): void {\r\n\r\n        this.fetchBadges().finally(() => {\r\n            if (!this.badgeHash && this.splitviewCtrl.isOn() && this.badges.length > 0) {\r\n                // Take first and load it.\r\n                this.loadIssuedBadge(this.badges[0].uniquehash);\r\n            }\r\n            this.badgesLoaded = true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fetch all the badges required for the view.\r\n     *\r\n     * @return {Promise<any>} Promise resolved when done.\r\n     */\r\n    fetchBadges(): Promise<any> {\r\n        this.currentTime = this.timeUtils.timestamp();\r\n\r\n        return this.badgesProvider.getUserBadges(this.courseId, this.userId).then((badges) => {\r\n            this.badges = badges;\r\n        }).catch((message) => {\r\n            this.domUtils.showErrorModalDefault(message, 'Error getting badges data.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refresh the badges.\r\n     *\r\n     * @param {any} refresher Refresher.\r\n     */\r\n    refreshBadges(refresher: any): void {\r\n        this.badgesProvider.invalidateUserBadges(this.courseId, this.userId).finally(() => {\r\n            this.fetchBadges().finally(() => {\r\n                refresher.complete();\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Navigate to a particular badge.\r\n     *\r\n     * @param {string} badgeHash Badge to load.\r\n     */\r\n    loadIssuedBadge(badgeHash: string): void {\r\n        this.badgeHash = badgeHash;\r\n        const params = {courseId: this.courseId, userId: this.userId, badgeHash: badgeHash};\r\n        this.splitviewCtrl.push('AddonBadgesIssuedBadgePage', params);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/badges/pages/user-badges/user-badges.ts"],"sourceRoot":""}
=======
{"version":3,"sources":["../../src/addon/competency/pages/competencies/competencies.module.ts","../../src/addon/competency/pages/competencies/competencies.ts"],"names":[],"mappings":"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","file":"116.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonCompetencyCompetenciesPage } from './competencies';\n\n@NgModule({\n    declarations: [\n        AddonCompetencyCompetenciesPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        IonicPageModule.forChild(AddonCompetencyCompetenciesPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonCompetencyCompetenciesPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/pages/competencies/competencies.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, ViewChild } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\nimport { AddonCompetencyProvider } from '../../providers/competency';\n\n/**\n * Page that displays the list of competencies of a learning plan.\n */\n@IonicPage({ segment: 'addon-competency-competencies' })\n@Component({\n    selector: 'page-addon-competency-competencies',\n    templateUrl: 'competencies.html',\n})\nexport class AddonCompetencyCompetenciesPage {\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\n\n    protected planId: number;\n    protected courseId: number;\n    protected competencyId: number;\n    protected userId: number;\n\n    competenciesLoaded = false;\n    competencies = [];\n    title: string;\n\n    constructor(navParams: NavParams, private translate: TranslateService, private domUtils: CoreDomUtilsProvider,\n            private competencyProvider: AddonCompetencyProvider) {\n        this.planId = navParams.get('planId');\n        this.courseId = navParams.get('courseId');\n        this.competencyId = navParams.get('competencyId');\n        this.userId = navParams.get('userId');\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        if (this.competencyId) {\n            // There is a competency to load.\n            this.openCompetency(this.competencyId);\n        }\n\n        this.fetchCompetencies().then(() => {\n            if (!this.competencyId && this.splitviewCtrl.isOn() && this.competencies.length > 0) {\n                // Take first and load it.\n                this.openCompetency(this.competencies[0].id);\n            }\n        }).finally(() => {\n            this.competenciesLoaded = true;\n        });\n    }\n\n    /**\n     * Fetches the competencies and updates the view.\n     *\n     * @return {Promise<void>} Promise resolved when done.\n     */\n    protected fetchCompetencies(): Promise<void> {\n        let promise;\n\n        if (this.planId) {\n            promise = this.competencyProvider.getLearningPlan(this.planId);\n        } else if (this.courseId) {\n            promise = this.competencyProvider.getCourseCompetencies(this.courseId, this.userId);\n        } else {\n            promise = Promise.reject(null);\n        }\n\n        return promise.then((response) => {\n            if (response.competencycount <= 0) {\n                return Promise.reject(this.translate.instant('addon.competency.errornocompetenciesfound'));\n            }\n\n            if (this.planId) {\n                this.title = response.plan.name;\n                this.userId = response.plan.userid;\n            } else {\n                this.title = this.translate.instant('addon.competency.coursecompetencies');\n            }\n            this.competencies = response.competencies;\n        }).catch((message) => {\n            this.domUtils.showErrorModalDefault(message, 'Error getting competencies data.');\n        });\n    }\n\n    /**\n     * Opens a competency.\n     *\n     * @param {number} competencyId\n     */\n    openCompetency(competencyId: number): void {\n        this.competencyId = competencyId;\n        let params;\n        if (this.planId) {\n            params = {competencyId, planId: this.planId};\n        } else {\n            params = {competencyId, courseId: this.courseId, userId: this.userId};\n        }\n        this.splitviewCtrl.push('AddonCompetencyCompetencyPage', params);\n    }\n\n    /**\n     * Refreshes the competencies.\n     *\n     * @param {any} refresher Refresher.\n     */\n    refreshCompetencies(refresher: any): void {\n        let promise;\n        if (this.planId) {\n            promise = this.competencyProvider.invalidateLearningPlan(this.planId);\n        } else {\n            promise = this.competencyProvider.invalidateCourseCompetencies(this.courseId, this.userId);\n        }\n\n        return promise.finally(() => {\n            this.fetchCompetencies().finally(() => {\n                refresher.complete();\n            });\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/competency/pages/competencies/competencies.ts"],"sourceRoot":""}
>>>>>>> 5632a65c1fdc0002876490b68e6dc6621a0dd43d
